package mycalculator;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.GraphicsEnvironment;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class Play extends JFrame {

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				Play play = new Play();
				play.setVisible(true);
				}
			});
	}

	String info = " ";
	String calculation = " ";
	String modulo = " ";
	String result = " ";

	String regA;
	String regB;

	double a = 0, b = 0, c = 0, mod = 0, memory = 0;
	String modeTag = "";

	public Play(){

		regA = "";
		regB = "";

		setTitle("My Calculator");

		ImageIcon icon = new ImageIcon("./img/icon_105830_128.png");
		setIconImage(icon.getImage());

		int appWidth = 300;
		int appHeight = 400;
		int scrWidth = GraphicsEnvironment.getLocalGraphicsEnvironment()
				.getDefaultScreenDevice().getDisplayMode().getWidth();
		int scrHeight = GraphicsEnvironment.getLocalGraphicsEnvironment()
				.getDefaultScreenDevice().getDisplayMode().getHeight();
		int x = (scrWidth - appWidth) / 2;
		int y = (scrHeight - appHeight) / 2;
		setBounds(x, y, appWidth, appHeight);

		setResizable(false);

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);


		JPanel panel = new JPanel();
		panel.setLayout(new BorderLayout());
		setContentPane(panel);

		JPanel register = new JPanel();
		register.setLayout(new GridLayout(2,2));
		register.setBackground(Color.WHITE);

		register.add(new JLabel(info));

		JLabel display2 = new JLabel(calculation);
		display2.setHorizontalAlignment(JLabel.RIGHT);
		register.add(display2);

		register.add(new JLabel(modulo));

		JLabel display4 = new JLabel(result);
		display4.setHorizontalAlignment(JLabel.RIGHT);
		register.add(display4);
		panel.add(register,BorderLayout.PAGE_START);

		JPanel keyboard = new JPanel();
		keyboard.setLayout(new GridLayout(6,4));

		//button pracing...
		JButton keyMC = new JButton("MC");
		keyMC.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				memory = 0;
				infoRegen();
			}
		});
		keyboard.add(keyMC);

		JButton keyMR = new JButton("MR");
		keyMR.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				if(memory!=0){
					regB = String.valueOf(memory);
				}
			}
		});
		keyboard.add(keyMR);
		JButton keyMS = new JButton("MS");
		keyMS.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				memory = Double.parseDouble(regB);
				infoRegen();
			}
		});
		keyboard.add(keyMS);

		JButton keyCLR = new JButton("CLR");
		keyCLR.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				selectMode(0);
			}
		});
		keyboard.add(keyCLR);


		JButton keySqrt = new JButton("√");
		keySqrt.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keySqrt);

		JButton keyPsnt = new JButton("%");
		keyPsnt.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyPsnt);

		JButton keySign = new JButton("±");
		keySign.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keySign);

		JButton keyMod = new JButton("÷余り");
		keyMod.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyMod);


		JButton key7 = new JButton("7");
		key7.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key7);

		JButton key8 = new JButton("8");
		key8.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key8);

		JButton key9 = new JButton("9");
		key9.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key9);

		JButton keyDvd = new JButton("÷");
		keyDvd.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyDvd);



		JButton key4 = new JButton("4");
		key4.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key4);

		JButton key5 = new JButton("5");
		key5.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key5);

		JButton key6 = new JButton("6");
		key6.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key6);

		JButton keyMlt = new JButton("×");
		keyMlt.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyMlt);


		JButton key1 = new JButton("1");
		key1.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key1);

		JButton key2 = new JButton("2");
		key2.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key2);

		JButton key3 = new JButton("3");
		key3.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key3);

		JButton keyMns = new JButton("－");
		keyMns.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyMns);


		JButton key0 = new JButton("0");
		key0.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(key0);

		JButton keyDot = new JButton(".");
		keyDot.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyDot);

		JButton keyEql = new JButton("＝");
		keyEql.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyEql);

		JButton keyPls = new JButton("＋");
		keyPls.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
		keyboard.add(keyPls);

		//button place comp.
		panel.add(keyboard, BorderLayout.CENTER);
	}

	public void selectMode(int mode){

	}

	public void infoRegen() {
		if(memory!=0){
			info = "M = " + String.valueOf(memory);
		}else{
			info = "";
		}
	}

	public void calculationRegen(){

	}

	public void moduloRegen(){

	}

	public void resultRegen(){

	}

}
